@model iVoteMVC.Models.Teacher

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Teacher</h4>
	<hr />
    <dl class="dl-horizontal">
        <dt>
           
            @Html.DisplayNameFor(model => model.name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.username)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.username)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.email)
        </dd>

        <dd>
            @using (Html.BeginForm())
            {
                <p>
                    @Html.TextBox("SearchTerm", ViewBag.currentFilter as string)
                    <input type="submit" value="Filter" />
                </p>
            } 
        </dd>
        <br />
        <dd>
            @Html.ActionLink("Add Session", "Create", "Session", new { id = Model.ID }, null)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Sessions)
        </dt>
        <dd>
            <table class="table">
                <tr>
                    @*<th>Name</th>*@
                    <th>@Html.ActionLink("Name", "Details", new { id = Model.ID, sortOrder = @Html.ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                    <th>Description</th>
                    @*<th>Created</th>*@
                    <th>@Html.ActionLink("Created", "Details", new { id = Model.ID, sortOrder = @Html.ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                    <th>Modified</th>
                    <th>Questions</th>
                </tr>

                @{
                    var sessions = Model.Sessions.Where(s => s.name.Contains(@Html.ViewBag.searchTerm) || s.description.Contains(@Html.ViewBag.searchTerm));
                    string sortOrder = Html.ViewBag.sortOrder;
                        
                    switch (sortOrder)
                    {
                      case "name_desc":
                         sessions = sessions.OrderByDescending(s => s.name);
                         break;
                      case "Date":
                         sessions = sessions.OrderBy(s => s.dateCreated);
                         break;
                      case "date_desc":
                         sessions = sessions.OrderByDescending(s => s.dateCreated);
                         break;
                      default:
                         sessions = sessions.OrderBy(s => s.name);
                         break;
                    }
                        
                }
                @*@foreach (var session in Model.Sessions.Where(s => s.name.Contains(@Html.ViewBag.searchTerm) || s.description.Contains(@Html.ViewBag.searchTerm)))*@
                @foreach(var session in sessions)
                {
                    <tr>
                        <td>
                            @Html.ActionLink(session.name, "Details", "Session", new { id = session.ID }, null)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => session.description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => session.dateCreated)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => session.dateModifed)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => session.NoOfQuestions)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", "Session", new { id = session.ID, teacherID = session.TeacherID }, null) |
                            @Html.ActionLink("Delete", "Delete", "Session", new { id = session.ID }, null)
                        </td>
                    </tr>
                }
            </table>
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
